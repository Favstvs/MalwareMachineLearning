#!/usr/bin/python

from sklearn import tree
from sklearn.feature_extraction import DictVectorizer

classifier= tree.DecisionTreeClassifier()
vectorizer = DictVectorizer(sparse=False)

training_examples = [
  {'packed':1,'contains_encrypted':0},
  {'packed':0,'contains_encrypted':0},
  {'packed':1,'contains_encrypted':1},
  {'packed':1,'contains_encrypted':0},
  {'packed':0,'contains_encrypted':1},
  {'packed':1,'contains_encrypted':0},
  {'packed':0,'contains_encrypted':0},
  {'packed':0,'contains_encrypted':0},

]
ground_truth = [1,1,1,1,0,0,0,0]

vectorizer.fit(training_examples)

X = vectorizer.transform(training_examples)
y = ground_truth

classifier.fit(X,y)

test_example = {'packed':1,'contains_encrypted':0}
test_vector = vectorizer.transform(test_examples)
print(classifier.predict(test_vector))

with open("classifier.dot", "w") as output_file:
  tree.export_graphviz(
    classifier,
    feature_names=vectorizer.get_feature_names(),
    out_file=output_file
  )
import os
os.system("dot classifier.dot -Tpng -o classifier.png")
